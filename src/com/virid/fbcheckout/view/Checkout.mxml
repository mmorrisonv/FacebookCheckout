<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="154" height="100%" xmlns:smallviews="com.virid.fbcheckout.view.smallviews.*"
		 creationComplete="creationComplete(event)" xmlns:view="com.virid.fbcheckout.view.*" xmlns:gifImage="org.bytearray.gif.gifImage.*">
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import controller.commands.checkoutArbiter;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.states.SetStyle;
			
			import org.bytearray.gif.*;
			import org.bytearray.gif.player.GIFPlayer;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			/*
			*Event Definition
			*/
			public static var BILLING_SAME_AS:String="BSA";
			public static var CHECKOUT_PURCHASE:String = "FINAL_PURCHASE"
			public static var SHIPPING_OPTION_CHANGED:String = "SOC";
			public static var SHIPPING_ADDRESS_CHANGED:String = "SS";
				
			private var checkoutBtnDisabled:Boolean = false;
			private var checkShippingTimer:Timer = new Timer(2000,1);
			
			
			[Embed("assets/loaderswf.swf",mimetype="application/octest-stream")]
			private var preloaderswf:Class;

			private function loadSwf():void{
				var ba : ByteArray = new preloaderswf() as ByteArray;
				var l : Loader = new Loader();
				l.loadBytes(ba); 
				l.addEventListener(Event.ADDED_TO_STAGE, onTemplateAdd);
				//addChild(l);
				this.checkoutBtnLoadingAnimation.source=l;
			}

			
			private function onTemplateAdd(evt:Event):void{
				//templ  = evt.target.contentLoaderInfo.content;
			}
			
			protected function ratingChanged(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			
			
			protected function creationComplete(event:FlexEvent):void
			{
				var myMediator:CheckoutMediator = new CheckoutMediator();
				myMediator.register(this);
				if(this.sameAsShipping.selected)
					deactivateAllBillingFields();
				else
					enableAllBillingFields();
				
				this.checkShippingTimer.addEventListener(TimerEvent.TIMER_COMPLETE,checkShippingAddress);
				
				//setup demo info
				/*
				bfname.text = "Toby";
				sfname.text = "Toby";
				blname.text = "Johnson"; 
				slname.text = "Johnson";
				baddress1.text = "555 Alexander Bell Dr.";
				saddress1.text = "555 Alexander Bell Dr.";
				baddress2.text = ""
				saddress2.text = "";
				bstate.text  = "VA";
				sstate.text = "VA";
				bzip.text = "44444"
				szip.text = "44444";
				bcity.text = "reston";
				scity.text = "reston";
				
				email.text = "mail@virid.com";
				phonenum.text = "555-555-5555";

				this.bcardnum.text ="4111-1111-1111-1111";
				this.bcardcvv.text = "123";
				bcardmonth.text = "4";
				bcardyear.text = "2012";*/
				
			}
			
			
			protected function checkoutClicked(event:MouseEvent):void
			{
				if(checkoutBtnDisabled)
					return;
				
				
				var e:Event = new Event(CHECKOUT_PURCHASE);
				dispatchEvent(e);
				
			}
			
			public function disableCheckoutBtn(newText:String = '',showLoadingScreen:Boolean = false):void
			{
				this.checkoutBtnDisabled = true;
				this.checkoutBtn.useHandCursor = false;
				this.checkoutBtn.buttonMode = false;
				/*if(newText != '' || newText != null)
					this.checkoutBtnText.text = newText;*/
				/*if(showLoadingScreen)
				{
					this.checkoutBtnLoadingAnimation.visible = true;
				}*/
			}
			public function enableCheckoutBtn(newText:String = 'Complete'):void
			{
				this.checkoutBtnDisabled = false;
				this.checkoutBtn.useHandCursor = true;
				this.checkoutBtn.buttonMode = true;
				/*if(newText != '' || newText != null)
					this.checkoutBtnText.text = newText;*/

				this.checkoutBtnLoadingAnimation.visible = false;

			}

			
	
			
			protected function checkbox1_changeHandler(event:Event):void
			{
				var e:Event = new Event(BILLING_SAME_AS);
				dispatchEvent(e);
				if( this.sameAsShipping.selected )
					deactivateAllBillingFields();
				else
					enableAllBillingFields();
			}
			
			private function deactivateAllBillingFields():void
			{
				// TODO Auto Generated method stub
				this.baddress1.enabled = this.baddress2.enabled = this.bfname.enabled = this.blname.enabled = this.bstate.enabled = this.bcity.enabled = this.bzip.enabled = this.bcity.enabled = false;
				this.bfname.text = this.sfname.text;
				this.blname.text = this.slname.text;
				this.baddress1.text = this.saddress1.text;
				this.baddress2.text = this.saddress2.text;
				this.bstate.text = this.sstate.text;
				this.bzip.text = this.szip.text;
				this.bcity.text = this.scity.text;
			}
			private function enableAllBillingFields():void
			{
				this.baddress1.enabled = this.baddress2.enabled = this.bfname.enabled = this.blname.enabled = this.bstate.enabled = this.bcity.enabled = this.bzip.enabled = this.bcity.enabled = true;
			}
			
	
			

			

			
			protected function onItemizedViewClicked1(event:MouseEvent):void
			{
				this.itemizedView.toggleUI();
				
			}
			
			public function showConfirmationPanel():void{
				
				this.confirmationPanel.showPanel();
				
			}
			
			public function showConfirmationStatusPanel():void{
				
				this.confirmationPanel.showPanelStatus();
				
			}
			public function hideConfirmationStatusPanel():void{
				this.confirmationPanel.hidePanel();
			}
			
			protected function shippingOptionChanged(event:IndexChangeEvent):void
			{
				var e:Event = new Event(SHIPPING_OPTION_CHANGED);
				dispatchEvent(e);
			}
			
			protected function handleTextInputChanged(event:TextOperationEvent):void
			{
				var target:UIComponent = event.target as UIComponent;
				
				//trace('timer stop, restarted, started');
				//this.checkShippingTimer.stop();
				//this.checkShippingTimer.reset();
				this.checkShippingTimer.start();
				
				switch(target.id)
				{
					case "":
						break;
					
					case "sfname":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.bfname.text = this.sfname.text;
						break;
					
					case "slname":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.blname.text = this.slname.text;
						break;
					
					case "saddress1":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.baddress1.text = this.saddress1.text;
						break;
					
					case "saddress2":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.baddress2.text = this.saddress2.text;
						break;
					
					case "sstate":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.bstate.text = this.sstate.text;
						break;
					
					case "szip":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.bzip.text = this.szip.text;
						break;
					
					case "scity":
						removeFieldError(target);
						if(this.sameAsShipping.selected)
							this.bcity.text = this.scity.text;
						break;
					
					default:
						removeFieldError(target);
						break;
						
				}
				
			}
			
			
			private function removeFieldError(uiElement:UIComponent):void
			{
				uiElement.toolTip = '';
				uiElement.styleName = "";
			}
			
			protected function shipping_focusOutHandler(event:FocusEvent):void
			{
				
				checkShippingAddress();
			}
			
			public function checkShippingAddress(e:Event=null):void{
				trace('checking shipping');
				//introspect all shipping fields and see if we should send shipping information so we can updated tax totals
				if( this.sfname.text != '' && this.slname.text != '' && this.saddress1.text != '' && this.sstate.text != '' && this.szip.text != '' && this.scity.text != '')
				{
					var e:Event = new Event(SHIPPING_ADDRESS_CHANGED);
					dispatchEvent(e);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Power id="bigThing"/>
		<s:Animate id="animateToProdDetail" target="{this}" duration="700" easer="{bigThing}">
			<s:SimpleMotionPath  property="y" valueTo="1000"/>
		</s:Animate>
	</fx:Declarations>
	
	<s:Rect y="106" width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0xb0b0b0"/>
		</s:fill>
	</s:Rect>

	<s:Rect  width="186" height="100%">
		<s:fill>
			<s:SolidColor color="0xcccccc"/>
		</s:fill>
	</s:Rect>
	<s:Group id="addressForms" width="200" x="3"  >

		<s:HGroup>
			<s:Group height="70" width="9">
				<s:Image source="@Embed('assets/divet-left-black.png')" width="10" height="12" top="8" />
				<s:Label styleName="lubalin" text="Ship To" fontSize="14" height="11" rotation="-90" bottom="0"/>
			</s:Group>
			<s:VGroup width="160" height="100%" paddingTop="3" paddingRight="3" paddingBottom="3"  gap="3">
				<s:HGroup width="100%">
					<s:TextInput id="sfname" prompt="First Name" width="100%" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
					<s:TextInput id="slname" prompt="Last Name" width="100%" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
				</s:HGroup>
				<s:TextInput id="saddress1" prompt="Address 1" width="100%" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
				<s:TextInput id="saddress2" prompt="Address 2" width="100%" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
				<s:HGroup width="100%">
					<s:TextInput id="scity" prompt="City" width="60%" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
					<s:TextInput id="sstate" prompt="ST" width="18%" maxChars="2" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
					<s:TextInput id="szip" prompt="Zip" width="22%" maxChars="5" change="handleTextInputChanged(event)" focusOut="shipping_focusOutHandler(event)"/>
				</s:HGroup>		
				<s:TextInput id="email" prompt="Email Address for receipt" width="100%"/>
			</s:VGroup>
		
		</s:HGroup>
		
		<s:HGroup y="102">
			
			<s:Group height="62" width="9">
				<s:Image source="@Embed('assets/divet-left-black.png')" width="10" height="12" top="4" />
				<s:Label styleName="lubalin" text="Bill To" fontSize="14" height="10" rotation="-90" bottom="0"/>
			</s:Group>
			
			<s:VGroup width="160" height="100%" gap="3"
					  paddingTop="0" paddingRight="3" paddingBottom="3" >
				
				
				<s:CheckBox id="sameAsShipping" styleName="lubalin" label="Same As Shipping" fontSize="10" color="0xffffff" selected="true" x="90" y="-15" alignmentBaseline="ideographicCenter" change="checkbox1_changeHandler(event)"/>
				
				<s:HGroup width="100%">
					<s:TextInput id="bfname" prompt="First Name" width="100%" change="handleTextInputChanged(event)"/>
					<s:TextInput id="blname" prompt="Last Name" width="100%" change="handleTextInputChanged(event)"/>
				</s:HGroup>
				<s:TextInput id="baddress1" prompt="Address 1" width="100%" change="handleTextInputChanged(event)"/>
				<s:TextInput id="baddress2" prompt="Address 2" width="100%" change="handleTextInputChanged(event)"/>
				<s:HGroup width="100%">
					<s:TextInput id="bcity" prompt="City" width="60%" toolTip="test" change="handleTextInputChanged(event)"/>
					<s:TextInput id="bstate" prompt="ST" width="18%" maxChars="2" change="handleTextInputChanged(event)"/> 
					<s:TextInput id="bzip" prompt="Zip" width="22%" maxChars="5" change="handleTextInputChanged(event)"/>
				</s:HGroup>	
				<s:TextInput id="phonenum" prompt="Phone Number" width="100%" change="handleTextInputChanged(event)"/>

			</s:VGroup>
			
		</s:HGroup>
	</s:Group>

	
	<s:VGroup width="200" x="192" y="110" gap="1">
		
		<s:Label styleName="lubalin" text="Shipping Method" fontSize="14" height="14" paddingTop="2" />
		<s:DropDownList id="soptions" width="100%" contentBackgroundColor="0xaaaaaa" selectedIndex="0" labelField="desc"
						useHandCursor="true" buttonMode="true" change="shippingOptionChanged(event)" itemRenderer="com.virid.fbcheckout.view.smallviews.shippingOptionsItemRenderer"
						borderAlpha="0" borderVisible="false" skinClass="com.virid.fbcheckout.view.smallviews.skins.DropDownSkin" cornerRadius="0" verticalCenter="-1" />
			
		<s:Label styleName="lubalin" text="Card Details" fontSize="14" height="14" paddingTop="2"/>
		<s:HGroup width="100%">
			<s:TextInput id="bcardnum" prompt="Card Number" width="50%" change="handleTextInputChanged(event)"/>
			<s:TextInput id="bcardmonth" prompt="MM" width="15%" maxChars="2" change="handleTextInputChanged(event)"/>
			<s:TextInput id="bcardyear" prompt="YYYY" width="20%" maxChars="4" change="handleTextInputChanged(event)"/>
			<s:TextInput id="bcardcvv" prompt="CVV" width="15%" maxChars="3" change="handleTextInputChanged(event)"/>
		</s:HGroup>	

		
	</s:VGroup>
	
	<s:Group width="100%" height="40" y="184" x="0">
		<s:Rect x="186" width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xffffff" />
			</s:fill>
		</s:Rect>
		
		<s:Group id="checkoutOptionButtons" width="100%" height="36">
			<s:Group height="30" right="117" y="5">
				<s:Label text="Final Price:" fontSize="9" styleName="lubalin" y="2" />
				<s:Label id="cartPrice" text="$--.-- USD" x="0" fontSize="18" styleName="lubalin" bottom="0"/>
			</s:Group>
			<s:Group width="74" height="14" right="84" y="3">
				<s:Rect width="100%" height="100%"><s:stroke><s:SolidColorStroke color="0xcccccc" weight="1" /></s:stroke><s:fill>
					<s:SolidColor color="0xffffff"/>
				</s:fill></s:Rect>
				<s:Label text="ITEMIZED VIEW" fontSize="9" color="0xbbbbbb" top="3" horizontalCenter="0" textAlign="center" lineHeight="10" click="onItemizedViewClicked1(event)" useHandCursor="true" buttonMode="true"/>
				<!--<s:Label text="VIEW" fontSize="9" color="0xbbbbbb" bottom="2" horizontalCenter="0" textAlign="center" lineHeight="10" click="onItemizedViewClicked1(event)" useHandCursor="true" buttonMode="true"/>-->
			</s:Group>
			
			<s:Group right="0" width="78" height="40" id="checkoutBtn" 
					 click="checkoutClicked(event)" buttonMode="true" useHandCursor="true">
				<s:Image source="@Embed('assets/buttons/checkout-complete.png')" width="161" height="31" left="0" verticalCenter="-2"/>
				<!-- <mx:UIComponent id="loadingGif" top="4" left="10" width="12" /> -->
				<!-- <s:Image source="@Embed('assets/loading-orange.gif')" width="161" height="31" right="0" verticalCenter="-2"/> -->
				<!-- <gifImage:AnimatedGIFImage source="assets/loading-orange.gif" width="161" height="31" right="0" verticalCenter="-2"/> -->
				<s:Image id="checkoutBtnLoadingAnimation" source="assets/loaderswf.swf" width="20" left="3" top="-5" visible="false" />
				<!-- <s:SWFLoader source="" /> -->
				<s:Label id="checkoutBtnText" text="Complete " styleName="lubalin" color="0xffffff" fontSize="13" left="10" y="6" />
				<s:Label id="secondLine" text="Purchase" styleName="lubalin" color="0xffffff" fontSize="13" left="12" bottom="8"/>		 
			</s:Group>
			
		</s:Group>
		<view:PopupOrderOverview id="itemizedView" width="243" height="50" bottom="-167"/>
	</s:Group>
	
	<view:PanelCheckoutConfimation id="confirmationPanel" width="100%" height="300" y="300" x="0"/>

</s:Group>